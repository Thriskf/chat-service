name: dev-environment
#docker compose -f docker-compose.yml -p dev-environment up -d SERVICENAME


services:

  chat-service:
    image: project/chat-service:latest
    container_name: chat-service
    depends_on:
#      zoo1:
#        condition: service_started
#      zoo2:
#        condition: service_started
#      zoo3:
#        condition: service_started
      keycloak:
        condition: service_started
      mariadb:
        condition: service_started
#      rabbitmq:
#        condition: service_started
    ports:
      - "8050:8050"
#    network_mode: host
  #    network_mode: bridge
  #    networks:
  #      - default-bridge-network


  phpmyadmin:
    image: phpmyadmin:latest
    container_name: dev-phpAdmin
    restart: always
    ports:
      - "8010:80"
    environment:
      PMA_HOSTS: mariadb
      PMA_PORTS: 3306
      PMA_ARBITRARY: 1
      PMA_USER: root
      PMA_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: dev-keycloak
    ports:
      - "8011:8080"
    depends_on:
      mariadb:
        condition: service_started
    environment:
      KEYCLOAK_ADMIN: dev
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_DB: mariadb
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: password
      KC_DB_URL: jdbc:mariadb://mariadb:3306/keycloak
      KC_DB_POOL_INITIAL_SIZE: 5
      KC_DB_POOL_MIN_SIZE: 2
      KC_DB_POOL_MAX_SIZE: 10
      KC_LOG_LEVEL: DEBUG
    command:
      - "start-dev"
      - "--import-realm"
    volumes:
      - ./realm:/opt/keycloak/data/import

  mariadb:
    image: mariadb:latest
    container_name: dev-maria
    restart: always
    ports:
      - "8030:3306"
    environment:
      MARIADB_ROOT_PASSWORD: password
#      MARIADB_DATABASE: elteq_user_service
      MARIADB_INITDB_SKIP_TZINFO: 1
      MARIADB_INITDB_WD: /docker-entrypoint-initdb.d
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d

  mysqldb:
    image: mysql:latest
    container_name: dev-mysql
    restart: always
    ports:
      - "8031:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: banbo_ms
  #      networks:
  #        - default-network


  banbo:
    image: banbo-backend-v0.0.1:latest
    container_name: banbo
    ports:
      - "8091:8080"
    environment:
      - DB_HOST=mysqldb  # Use the service name as the hostname
      - DB_PORT=3306     # MySQL default port
      - DB_NAME=banbo_ms
      - DB_USER=root
      - DB_PASSWORD=password

    depends_on:
      #      zoo1:
      #        condition: service_started
      #      zoo2:
      #        condition: service_started
      #      zoo3:
      #        condition: service_started
      keycloak:
        condition: service_started
      mysqldb:
        condition: service_started

#    networks:
#      - default-network


  jaeger:
    image: jaegertracing/jaeger:2.3.0
    container_name: dev-jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"

  openTelemetry:
    image: otel/opentelemetry-collector-contrib
    container_name: dev-opt
    ports:
      - "4317:4317"
      - "4318:4318"

  jaeger-1:
    image: jaegertracing/all-in-one:latest
    container_name: dev-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true  # Enable OTLP receiver in Jaeger
#    networks:
#      - addis


  mongo:
    image: mongo:latest
#    restart: always
    container_name: dev-mongo
    ports:
      - "8014:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  redis:
    image: redis:latest
    container_name: dev-redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dev-rabbit
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: dev
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: dev-rabbit

  redis-ui:
    image: patrikx3/p3x-redis-ui:latest
    container_name: dev-redis-ui
    ports:
      - "7843:7843"
    volumes:
      - /home/org.elteq.commons.user/p3x-redis-ui-settings:/settings

  zoo1:
    image: zookeeper
    container_name: dev-zk-1
    restart: always
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper
    container_name: dev-zk-2
#    restart: always
    hostname: zoo2
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper
    container_name: dev-zk-3
#    restart: always
    hostname: zoo3
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: dev-kafka-1
    restart: always
    depends_on:
      zoo1:
        condition: service_started
      zoo2:
        condition: service_started
      zoo3:
        condition: service_started

    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      #      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: dev-kafka-2
    depends_on:
      zoo1:
        condition: service_started
      zoo2:
        condition: service_started
      zoo3:
        condition: service_started

    ports:
      - "39092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      #      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://127.0.0.1:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: dev-kafka-3
    depends_on:
      zoo1:
        condition: service_started
      zoo2:
        condition: service_started
      zoo3:
        condition: service_started

    ports:
      - "49092:9092"
    environment:
      KAFKA_BROKER_ID: 3
      #      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://127.0.0.1:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  all:
    image: hello-world
    container_name: dev-hello
    depends_on:
      mariadb:
        condition: service_started
      zoo1:
        condition: service_started
      zoo2:
        condition: service_started
      zoo3:
        condition: service_started
      redis:
        condition: service_started
      redis-ui:
        condition: service_started
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
      rabbitmq:
        condition: service_started
      keycloak:
        condition: service_started
      mongo:
        condition: service_started
      mysqldb:
        condition: service_started




  kafka-controller-1:
    image: apache/kafka:latest
    container_name: kafka-controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-controller-2:
    image: apache/kafka:latest
    container_name: kafka-controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-controller-3:
    image: apache/kafka:latest
    container_name: kafka-controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-broker-1:
    image: apache/kafka:latest
    container_name: kafka-broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://127.0.0.1:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3

  kafka-broker-2:
    image: apache/kafka:latest
    container_name: kafka-broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://127.0.0.1:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3

  kafka-broker-3:
    image: apache/kafka:latest
    container_name: kafka-broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://127.0.0.1:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3



#services:
#  openTelemetry:
#    image: otel/opentelemetry-collector-contrib
#    container_name: dev-opt
#    ports:
#      - "4317:4317"
#      - "4318:4318"
#    volumes:
#      - ./otel-config.yaml:/etc/otel-collector-config.yaml
#    command: [ "--config=/etc/otel-collector-config.yaml" ]
#    networks:
#      - tracing-network
#
#  jaeger:
#    image: jaegertracing/all-in-one:latest
#    container_name: dev-jaeger
#    ports:
#      - "16686:16686"
#    environment:
#      - COLLECTOR_OTLP_ENABLED=true
#    networks:
#      - tracing-network
#

#networks:
#  default-bridge-network:
#    driver: bridge
#
#  default--host-network:
#    driver: host